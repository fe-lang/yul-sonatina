---
source: tests/transpile.rs
input_file: test_files/nested_object.yul
---
target = evm-ethereum-cancun

global private const i256 $Contract1::Table2 = 16675

func private %Contract1::Contract1_deployed::__init__() -> unit {
    block0:
        evm_return 0.i256 32.i256;
}

func private %Contract1::Contract1_deployed::block0::allocate(v0.i256) -> i256 {
    block0:
        v2.*i256 = int_to_ptr 64.i256 *i256;
        v3.i256 = mload v2 i256;
        v4.i256 = is_zero v3;
        br v4 block1 block2;

    block1:
        jump block2;

    block2:
        v6.i256 = phi (v3 block0) (96.i256 block1);
        v8.i256 = add v6 v0;
        v9.*i256 = int_to_ptr 64.i256 *i256;
        mstore v9 v8 i256;
        return v6;
}

func private %Contract1::Contract2::__init__() -> unit {
    block0:
        return;
}

func private %Contract1::__init__() -> unit {
    block0:
        v0.i256 = evm_contract_size %Contract1::Contract2::__init__;
        v1.i256 = call %Contract1::block4::allocate v0;
        v2.*i256 = get_function_ptr %Contract1::Contract2::__init__;
        v3.i256 = ptr_to_int v2 i256;
        evm_code_copy v1 v3 v0;
        v4.i256 = add v1 v0;
        v6.*i256 = int_to_ptr v4 *i256;
        mstore v6 4660.i256 i256;
        v9.i256 = add v0 32.i256;
        v10.i256 = evm_create 0.i256 v1 v9;
        v11.i256 = evm_contract_size %Contract1::Contract1_deployed::__init__;
        v12.i256 = call %Contract1::block4::allocate v11;
        v13.*i256 = get_function_ptr %Contract1::Contract1_deployed::__init__;
        v14.i256 = ptr_to_int v13 i256;
        evm_code_copy v12 v14 v11;
        evm_return v12 v11;
}

func private %Contract1::block4::allocate(v0.i256) -> i256 {
    block0:
        v2.*i256 = int_to_ptr 64.i256 *i256;
        v3.i256 = mload v2 i256;
        v4.i256 = is_zero v3;
        br v4 block1 block2;

    block1:
        jump block2;

    block2:
        v6.i256 = phi (v3 block0) (96.i256 block1);
        v8.i256 = add v6 v0;
        v9.*i256 = int_to_ptr 64.i256 *i256;
        mstore v9 v8 i256;
        return v6;
}
